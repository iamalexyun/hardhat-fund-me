{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x4c3784f195fb4fc7364acb34bdb8044c0912bd5ea62c99cc958fc5f37054bbbd",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1100169",
    "logsBloom": "0x
    "blockHash": "0xaafc84914a2ce6622a9b39db4c3433989c54691e7a6c9af4892349df2c761194",
    "transactionHash": "0x4c3784f195fb4fc7364acb34bdb8044c0912bd5ea62c99cc958fc5f37054bbbd",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1100169",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "142563bb2d8c58e7ebaa1167dcb2ca28",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Alex Yun\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"This implements price feeds as our library\"}},\"title\":\"A contract for crowdfunding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function fund the contract\"}},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//Get funds from users\\r\\n//Withdraw funds\\r\\n//Set a minimum funding value in USD\\r\\n// SPDX-License-Identifier: MIT\\r\\n//pramge\\r\\npragma solidity ^0.8.9;\\r\\n//imports\\r\\nimport \\\"./PriceConverter.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n//constant, immutable\\r\\n//error codes\\r\\nerror FundMe__NotOwner();\\r\\n\\r\\n//interfaces, library, contracts\\r\\n/** @title A contract for crowdfunding\\r\\n *  @author Alex Yun\\r\\n *  @notice This contract is to demo a sample funding contract\\r\\n *  @dev This implements price feeds as our library\\r\\n */\\r\\ncontract FundMe {\\r\\n    //type declarations\\r\\n    using PriceConverter for uint256;\\r\\n    // State variables\\r\\n    uint256 public constant MINIMUM_USD = 50 * 1e18; //gas inefficient\\r\\n    address[] public s_funders;\\r\\n    mapping(address => uint256) private s_addressToAmountFunded;\\r\\n    address private immutable i_owner;\\r\\n    AggregatorV3Interface public s_priceFeed;\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        // require(msg.sender == i_owner, \\\"Sender is not owner!\\\");\\r\\n        if (msg.sender != i_owner) {\\r\\n            revert FundMe__NotOwner();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor(address priceFeedAddress) {\\r\\n        i_owner = msg.sender;\\r\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *  @notice This function fund the contract\\r\\n     *  @dev This implements price feeds as our library\\r\\n     */\\r\\n    function fund() public payable {\\r\\n        require(\\r\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\r\\n            \\\"Didnt't send enough\\\"\\r\\n        ); //1e18 = 1 * 10 ** 18\\r\\n        s_funders.push(msg.sender);\\r\\n        s_addressToAmountFunded[msg.sender] =\\r\\n            s_addressToAmountFunded[msg.sender] +\\r\\n            msg.value;\\r\\n    }\\r\\n\\r\\n    function withdraw() public onlyOwner {\\r\\n        for (uint256 i = 0; i < s_funders.length; i++) {\\r\\n            address funder = s_funders[i];\\r\\n            s_addressToAmountFunded[funder] = 0;\\r\\n        }\\r\\n        s_funders = new address[](0);\\r\\n        (bool callSuccess, ) = payable(msg.sender).call{\\r\\n            value: address(this).balance\\r\\n        }(\\\"\\\");\\r\\n        require(callSuccess, \\\"Call failed!\\\");\\r\\n    }\\r\\n\\r\\n    function cheaperWithdraw() public onlyOwner {\\r\\n        address[] memory funders = s_funders;\\r\\n        for (uint256 i = 0; i < funders.length; i++) {\\r\\n            address funder = funders[i];\\r\\n            s_addressToAmountFunded[funder] = 0;\\r\\n        }\\r\\n        s_funders = new address[](0);\\r\\n        (bool callSuccess, ) = payable(msg.sender).call{\\r\\n            value: address(this).balance\\r\\n        }(\\\"\\\");\\r\\n        require(callSuccess, \\\"Call failed!\\\");\\r\\n    }\\r\\n\\r\\n    function getOwner() public view returns (address) {\\r\\n        return i_owner;\\r\\n    }\\r\\n\\r\\n    function getFunder(uint256 index) public view returns (address) {\\r\\n        return s_funders[index];\\r\\n    }\\r\\n\\r\\n    function getAddressToAmountFunded(address funder)\\r\\n        public\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        return s_addressToAmountFunded[funder];\\r\\n    }\\r\\n\\r\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\r\\n        return s_priceFeed;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x4af8c44d7fe92dddd0f3267fff7e6403a17833df0bddce5831ff948039aa61cc\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.9;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    function getPrice(AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\r\\n        return uint256(price * 1e10);\\r\\n    }\\r\\n\\r\\n    function getConversionRate(\\r\\n        uint256 _ethAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUSD = (ethPrice * _ethAmount) / 1e18;\\r\\n        return ethAmountInUSD;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xf89770a661a4c4a42717ed90d4897d3bd8bc29c362b47544df8f69238a5589f5\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620014033803806200140383398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b60805161128a62000179600039600081816102a20152818161053001526106f3015261128a6000f3fe6080604052600436106100915760003560e01c8063893d20e811610059578063893d20e81461017d5780639e87a5cd146101a8578063b60d4288146101d3578063be2693f0146101dd578063d7b4750c146101f457610091565b80630343fb25146100965780630ec3b027146100d35780633ccfd60b146100fe57806354861af7146101155780636b69a59214610152575b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b89190610bc2565b610231565b6040516100ca9190610c08565b60405180910390f35b3480156100df57600080fd5b506100e861027a565b6040516100f59190610c82565b60405180910390f35b34801561010a57600080fd5b506101136102a0565b005b34801561012157600080fd5b5061013c60048036038101906101379190610cc9565b6104e0565b6040516101499190610d05565b60405180910390f35b34801561015e57600080fd5b5061016761051f565b6040516101749190610c08565b60405180910390f35b34801561018957600080fd5b5061019261052c565b60405161019f9190610d05565b60405180910390f35b3480156101b457600080fd5b506101bd610554565b6040516101ca9190610c82565b60405180910390f35b6101db61057e565b005b3480156101e957600080fd5b506101f26106f1565b005b34801561020057600080fd5b5061021b60048036038101906102169190610cc9565b610995565b6040516102289190610d05565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610325576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156103d057600080828154811061034a57610349610d20565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103c890610d7e565b915050610328565b50600067ffffffffffffffff8111156103ec576103eb610dc7565b5b60405190808252806020026020018201604052801561041a5781602001602082028036833780820191505090505b5060009080519060200190610430929190610ab8565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161045790610e27565b60006040518083038185875af1925050503d8060008114610494576040519150601f19603f3d011682016040523d82523d6000602084013e610499565b606091505b50509050806104dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d490610e99565b60405180910390fd5b50565b600081815481106104f057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006105bd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346109dc90919063ffffffff16565b10156105fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f590610f05565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106ac9190610f25565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610776576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156107f957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116107af575b5050505050905060005b815181101561088457600082828151811061082157610820610d20565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061087c90610d7e565b915050610803565b50600067ffffffffffffffff8111156108a05761089f610dc7565b5b6040519080825280602002602001820160405280156108ce5781602001602082028036833780820191505090505b50600090805190602001906108e4929190610ab8565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161090b90610e27565b60006040518083038185875af1925050503d8060008114610948576040519150601f19603f3d011682016040523d82523d6000602084013e61094d565b606091505b5050905080610991576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098890610e99565b60405180910390fd5b5050565b60008082815481106109aa576109a9610d20565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806109e883610a18565b90506000670de0b6b3a76400008583610a019190610f7b565b610a0b9190611004565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a6157600080fd5b505afa158015610a75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9991906110c2565b5050509150506402540be40081610ab0919061113d565b915050919050565b828054828255906000526020600020908101928215610b31579160200282015b82811115610b305782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610ad8565b5b509050610b3e9190610b42565b5090565b5b80821115610b5b576000816000905550600101610b43565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b8f82610b64565b9050919050565b610b9f81610b84565b8114610baa57600080fd5b50565b600081359050610bbc81610b96565b92915050565b600060208284031215610bd857610bd7610b5f565b5b6000610be684828501610bad565b91505092915050565b6000819050919050565b610c0281610bef565b82525050565b6000602082019050610c1d6000830184610bf9565b92915050565b6000819050919050565b6000610c48610c43610c3e84610b64565b610c23565b610b64565b9050919050565b6000610c5a82610c2d565b9050919050565b6000610c6c82610c4f565b9050919050565b610c7c81610c61565b82525050565b6000602082019050610c976000830184610c73565b92915050565b610ca681610bef565b8114610cb157600080fd5b50565b600081359050610cc381610c9d565b92915050565b600060208284031215610cdf57610cde610b5f565b5b6000610ced84828501610cb4565b91505092915050565b610cff81610b84565b82525050565b6000602082019050610d1a6000830184610cf6565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d8982610bef565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610dbc57610dbb610d4f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610e11600083610df6565b9150610e1c82610e01565b600082019050919050565b6000610e3282610e04565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564210000000000000000000000000000000000000000600082015250565b6000610e83600c83610e3c565b9150610e8e82610e4d565b602082019050919050565b60006020820190508181036000830152610eb281610e76565b9050919050565b7f4469646e7427742073656e6420656e6f75676800000000000000000000000000600082015250565b6000610eef601383610e3c565b9150610efa82610eb9565b602082019050919050565b60006020820190508181036000830152610f1e81610ee2565b9050919050565b6000610f3082610bef565b9150610f3b83610bef565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f7057610f6f610d4f565b5b828201905092915050565b6000610f8682610bef565b9150610f9183610bef565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610fca57610fc9610d4f565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061100f82610bef565b915061101a83610bef565b92508261102a57611029610fd5565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61105481611035565b811461105f57600080fd5b50565b6000815190506110718161104b565b92915050565b6000819050919050565b61108a81611077565b811461109557600080fd5b50565b6000815190506110a781611081565b92915050565b6000815190506110bc81610c9d565b92915050565b600080600080600060a086880312156110de576110dd610b5f565b5b60006110ec88828901611062565b95505060206110fd88828901611098565b945050604061110e888289016110ad565b935050606061111f888289016110ad565b925050608061113088828901611062565b9150509295509295909350565b600061114882611077565b915061115383611077565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561119257611191610d4f565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156111cf576111ce610d4f565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561120c5761120b610d4f565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561124957611248610d4f565b5b82820290509291505056fea2646970667358221220ef70ba71b9b02d1c9d52acd688fa171530eab131d2a1641e5c92eac31c7fbf5c64736f6c63430008090033",
  "deployedBytecode": "0x6080604052600436106100915760003560e01c8063893d20e811610059578063893d20e81461017d5780639e87a5cd146101a8578063b60d4288146101d3578063be2693f0146101dd578063d7b4750c146101f457610091565b80630343fb25146100965780630ec3b027146100d35780633ccfd60b146100fe57806354861af7146101155780636b69a59214610152575b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b89190610bc2565b610231565b6040516100ca9190610c08565b60405180910390f35b3480156100df57600080fd5b506100e861027a565b6040516100f59190610c82565b60405180910390f35b34801561010a57600080fd5b506101136102a0565b005b34801561012157600080fd5b5061013c60048036038101906101379190610cc9565b6104e0565b6040516101499190610d05565b60405180910390f35b34801561015e57600080fd5b5061016761051f565b6040516101749190610c08565b60405180910390f35b34801561018957600080fd5b5061019261052c565b60405161019f9190610d05565b60405180910390f35b3480156101b457600080fd5b506101bd610554565b6040516101ca9190610c82565b60405180910390f35b6101db61057e565b005b3480156101e957600080fd5b506101f26106f1565b005b34801561020057600080fd5b5061021b60048036038101906102169190610cc9565b610995565b6040516102289190610d05565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610325576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156103d057600080828154811061034a57610349610d20565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103c890610d7e565b915050610328565b50600067ffffffffffffffff8111156103ec576103eb610dc7565b5b60405190808252806020026020018201604052801561041a5781602001602082028036833780820191505090505b5060009080519060200190610430929190610ab8565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161045790610e27565b60006040518083038185875af1925050503d8060008114610494576040519150601f19603f3d011682016040523d82523d6000602084013e610499565b606091505b50509050806104dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d490610e99565b60405180910390fd5b50565b600081815481106104f057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006105bd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346109dc90919063ffffffff16565b10156105fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f590610f05565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106ac9190610f25565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610776576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156107f957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116107af575b5050505050905060005b815181101561088457600082828151811061082157610820610d20565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061087c90610d7e565b915050610803565b50600067ffffffffffffffff8111156108a05761089f610dc7565b5b6040519080825280602002602001820160405280156108ce5781602001602082028036833780820191505090505b50600090805190602001906108e4929190610ab8565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161090b90610e27565b60006040518083038185875af1925050503d8060008114610948576040519150601f19603f3d011682016040523d82523d6000602084013e61094d565b606091505b5050905080610991576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098890610e99565b60405180910390fd5b5050565b60008082815481106109aa576109a9610d20565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806109e883610a18565b90506000670de0b6b3a76400008583610a019190610f7b565b610a0b9190611004565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a6157600080fd5b505afa158015610a75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9991906110c2565b5050509150506402540be40081610ab0919061113d565b915050919050565b828054828255906000526020600020908101928215610b31579160200282015b82811115610b305782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610ad8565b5b509050610b3e9190610b42565b5090565b5b80821115610b5b576000816000905550600101610b43565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b8f82610b64565b9050919050565b610b9f81610b84565b8114610baa57600080fd5b50565b600081359050610bbc81610b96565b92915050565b600060208284031215610bd857610bd7610b5f565b5b6000610be684828501610bad565b91505092915050565b6000819050919050565b610c0281610bef565b82525050565b6000602082019050610c1d6000830184610bf9565b92915050565b6000819050919050565b6000610c48610c43610c3e84610b64565b610c23565b610b64565b9050919050565b6000610c5a82610c2d565b9050919050565b6000610c6c82610c4f565b9050919050565b610c7c81610c61565b82525050565b6000602082019050610c976000830184610c73565b92915050565b610ca681610bef565b8114610cb157600080fd5b50565b600081359050610cc381610c9d565b92915050565b600060208284031215610cdf57610cde610b5f565b5b6000610ced84828501610cb4565b91505092915050565b610cff81610b84565b82525050565b6000602082019050610d1a6000830184610cf6565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d8982610bef565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610dbc57610dbb610d4f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610e11600083610df6565b9150610e1c82610e01565b600082019050919050565b6000610e3282610e04565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564210000000000000000000000000000000000000000600082015250565b6000610e83600c83610e3c565b9150610e8e82610e4d565b602082019050919050565b60006020820190508181036000830152610eb281610e76565b9050919050565b7f4469646e7427742073656e6420656e6f75676800000000000000000000000000600082015250565b6000610eef601383610e3c565b9150610efa82610eb9565b602082019050919050565b60006020820190508181036000830152610f1e81610ee2565b9050919050565b6000610f3082610bef565b9150610f3b83610bef565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f7057610f6f610d4f565b5b828201905092915050565b6000610f8682610bef565b9150610f9183610bef565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610fca57610fc9610d4f565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061100f82610bef565b915061101a83610bef565b92508261102a57611029610fd5565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61105481611035565b811461105f57600080fd5b50565b6000815190506110718161104b565b92915050565b6000819050919050565b61108a81611077565b811461109557600080fd5b50565b6000815190506110a781611081565b92915050565b6000815190506110bc81610c9d565b92915050565b600080600080600060a086880312156110de576110dd610b5f565b5b60006110ec88828901611062565b95505060206110fd88828901611098565b945050604061110e888289016110ad565b935050606061111f888289016110ad565b925050608061113088828901611062565b9150509295509295909350565b600061114882611077565b915061115383611077565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561119257611191610d4f565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156111cf576111ce610d4f565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561120c5761120b610d4f565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561124957611248610d4f565b5b82820290509291505056fea2646970667358221220ef70ba71b9b02d1c9d52acd688fa171530eab131d2a1641e5c92eac31c7fbf5c64736f6c63430008090033",
  "devdoc": {
    "author": "Alex Yun",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "This implements price feeds as our library"
      }
    },
    "title": "A contract for crowdfunding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "This function fund the contract"
      }
    },
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 67,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 72,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}